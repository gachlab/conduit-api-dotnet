// <auto-generated />
using System;
using Conduit.Articles.Sql;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Conduit.Migrations
{
    [DbContext(typeof(DbContextSqlLite))]
    partial class DbContextSqlLiteModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0-preview.7.21378.4");

            modelBuilder.Entity("Conduit.Articles.Sql.Article", b =>
                {
                    b.Property<string>("slug")
                        .HasColumnType("TEXT");

                    b.Property<string>("authorusername")
                        .HasColumnType("TEXT");

                    b.Property<string>("body")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("description")
                        .HasColumnType("TEXT");

                    b.Property<bool>("favorited")
                        .HasColumnType("INTEGER");

                    b.Property<int>("favoritesCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("title")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("updatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("slug");

                    b.HasIndex("authorusername");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("Conduit.Articles.Sql.Author", b =>
                {
                    b.Property<string>("username")
                        .HasColumnType("TEXT");

                    b.Property<string>("bio")
                        .HasColumnType("TEXT");

                    b.Property<bool>("following")
                        .HasColumnType("INTEGER");

                    b.Property<string>("image")
                        .HasColumnType("TEXT");

                    b.HasKey("username");

                    b.ToTable("Author");
                });

            modelBuilder.Entity("Conduit.Articles.Sql.Tag", b =>
                {
                    b.Property<string>("name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Articleslug")
                        .HasColumnType("TEXT");

                    b.HasKey("name");

                    b.HasIndex("Articleslug");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("Conduit.Articles.Sql.Article", b =>
                {
                    b.HasOne("Conduit.Articles.Sql.Author", "author")
                        .WithMany()
                        .HasForeignKey("authorusername");

                    b.Navigation("author");
                });

            modelBuilder.Entity("Conduit.Articles.Sql.Tag", b =>
                {
                    b.HasOne("Conduit.Articles.Sql.Article", null)
                        .WithMany("tagList")
                        .HasForeignKey("Articleslug");
                });

            modelBuilder.Entity("Conduit.Articles.Sql.Article", b =>
                {
                    b.Navigation("tagList");
                });
#pragma warning restore 612, 618
        }
    }
}
